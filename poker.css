

body {
  text-align: center;
}

#popup {
  display: none;
  position: fixed;
  top: 30%;
  left: 67%;
  transform: translate(-30%, -50%);
  width: 850px;
  padding: 20px;
  background-color: #6b89acf8;
  border: 1px solid #ccc;
  border-radius: 20px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
}

#overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  z-index: 999;
}

h1 {
  display: inline-block;
}

.cardForChoice {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 5px;
  padding-left: 2%;
  padding-right: 2%;
  margin: auto;
}

.flopcards {
  display: flex;
  align-items: center;
}

.card-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.card {
  width: 100px;
  height: 180px;
  background-color: #ddd;
  border: 1px solid #aaa;
  margin-left: 10px;
  margin-right: 10px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  overflow: hidden;
}

.card.hover,
.card.hover-effect {
  opacity: 0.8;
}

.card-row {
  display: flex;
  justify-content: space-around;
  margin-bottom: 5px;
  /* Adjust margin as needed */
}

.choiceCard {
  width: 50px;
  height: 75px;
  border-radius: 3px;
  background-color: #ddd;
  border: 1px solid #aaa;
  margin-right: 10px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  overflow: hidden;
  /* Ensure images don't overflow the card */
}

.outs {
  width: 50px;
  height: 75px;
  border-radius: 3px;
  background-color: #ddd;
  border: 1px solid #aaa;
  margin-right: 10px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  overflow: hidden;
  /* Ensure images don't overflow the card */
}

.choiceCard.hover,
.choiceCard.hover-effect {
  opacity: 0.5;
}

.card img {
  max-width: 100%;
  max-height: 100%;
  object-fit: cover;
}

.card-label {
  padding-top: 5px;
  text-align: center;
  margin-top: 5px;
  font-weight: bold;
}

.playerHand {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 3%;
}

.playerHandFull {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.heightAligning {
  display: flex;
  align-items: center;
  flex-direction: column;
}

.playerCard {
  background-color: #ddd;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  overflow: hidden;
  /* Ensure images don't overflow the card */
}

.addButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 35px;
  height: 35px;
  background-color: #4CAF50;
  /* Green color */
  border-radius: 50%;
  color: #fff;
  /* White color for the icon */
  font-size: 17px;
  text-decoration: none;
  /* Remove default link styling */
  margin-bottom: 2%;
}

.stopButton {
  display: none;
  align-items: center;
  justify-content: center;
  width: 35px;
  height: 35px;
  background-color: #3498db;
  /* Blue color */
  border-radius: 50%;
  color: #fff;
  /* White color for the icon */
  cursor: pointer;
  border: none;
  outline: none;
  transition: background-color 0.3s ease-in-out;
}

button {
  text-align: center;
}

.equity-text {
  text-align: left;
}

.deleteButton {
  display: inline-block;
  background-color: #ff0000; /* Red color */
  color: #ffffff; /* White text color */
  border: none;
  border-radius: 50%; /* Make it round */
  padding: 10px; /* Adjust padding as needed */
  cursor: pointer;
  font-size: 16px;
  position: relative;
  overflow: hidden;
}

/* Styles for the cross inside the button */
.deleteButton::before,
.deleteButton::after {
  content: '';
  position: absolute;
  height: 2px;
  width: 50%;
  background-color: #ffffff; /* White color for the cross */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.deleteButton::before {
  transform: translate(-50%, -50%) rotate(45deg);
}

.deleteButton::after {
  transform: translate(-50%, -50%) rotate(-45deg);
}